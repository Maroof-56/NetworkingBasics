
 LOG MANAGEMENT 
 
     What  are the log file 
      
       A log file store events , process , messages , & other data from application , OS & devices.
       
       It provide information based on the user actions , playing an important role in monitoring.
        
       For troubleshooting log files helps a lot
       
       
       Log directory in linux 
       
        - cd /var/log   & check using pwd  ( enter as root user ) 
        
        
       Common Imp log file 
       
       
        - boot   ( booting step include when system start )
        - chron  ( chron jobs related file is include )
        - secure ( login activity of user realted file)
        - maillog( mailing reltaed service )
        - httpd  ( server realtedd httpd )
        - messages
        
        
       To Read message 
       
         - less file  name | cat 
         - ? to search for specific keyword ( press n for next matching word )
         - shift + g ( at end line )
        
        Live log monitoring 
        
         - tail -f file_name  ( everytime new file will  create or any activity happen it will shown live ) 
         
         
         grep  -i "error" file_name  ( check for any error & WARNING  first)
         
         egrep -i "error | warning" file_name ( for both )
         
         grep  -i "error" file_name | wc -l ( to see how many times this word occurs)
          
          
          
         - tools 
         
          logRotate
          
            - In any  of the files or folder if  u want to make changes in files simply do it according to your needs like compress the file , file size , set rotation time etc
            - Logs can grow large over time. logrotate helps manage this by rotating logs, compressing old ones, and deleting them after a certain period.
             
            - /var/log   ( log files location )
            
            - to check logRrotate is available type - logrotate
            
            - less /etc/logrotate.conf  | /etc/logrotate.d  ( main file of log  rotate ) 
            
            - cd /etc/logrotate.d  & ls ( u will see the available file & also u can edit its rotate time & so on ).  & vi file_name to edit the log file 
            
            - man logrotate  ( to see more info ) 
            
            - logrotate /etc/logrotate.conf  ( manually trigger to rotate the log on time)
            
            - log doesnot continously monitor the files to rotate to check its rotating time type - systemctl status logrotate.timer
            
            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1. System Logs

Location: /var/log/syslog (or /var/log/messages on some distributions)
Purpose: The primary log file for general system activity. It contains information about system boot, kernel messages, service startup, and general system errors. Administrators use this log to check for any issues with the operating system and services.

Example: Logs related to device drivers, system daemons, or security-related events.

2. Kernel Logs

Location: /var/log/kern.log
Purpose: Logs generated by the Linux kernel. This log captures kernel-related events, such as hardware issues, driver loading, and kernel warnings. It's useful for debugging hardware and low-level system problems.

Example: Messages about network interfaces going up/down or device errors.

3. Authentication Logs

Location: /var/log/auth.log (Debian/Ubuntu), /var/log/secure (RHEL/CentOS)
Purpose: Logs all authentication-related events, such as login attempts, SSH logins, and sudo commands. This log is important for security audits and tracking unauthorized access attempts.

Example: Failed login attempts or sudo usage.


4. Boot Logs

Location: /var/log/boot.log
Purpose: Records boot-related messages generated by system services and daemons during startup. If something goes wrong during the system boot process, this log provides insight.

Example: Service failures or success during boot.

5. Daemon Logs

Location: /var/log/daemon.log
Purpose: Logs messages from system daemons (background services). These logs are useful when troubleshooting services like networking, cron, or other background processes.

Example: Logs related to background tasks or services such as cron or dbus.

6. Application Logs

Location: Varies, but often in /var/log/ (e.g., /var/log/apache2/ for Apache logs)
Purpose: Logs generated by user-installed applications such as web servers, databases, and custom software. These logs are specific to each application and are crucial for application troubleshooting.

Example: Apache error logs, MySQL logs, or PHP logs.

7. Cron Logs

Location: /var/log/cron.log (or in /var/log/syslog on some systems)
Purpose: Logs generated by the cron daemon, which schedules and runs periodic tasks. This log helps you track the execution of cron jobs.

Example: Logs for scheduled tasks and whether they completed successfully.

8. Package Manager Logs

Location: /var/log/dpkg.log (Debian/Ubuntu), /var/log/yum.log (RHEL/CentOS)
Purpose: Logs for software package installation, updates, and removal. These logs help troubleshoot issues related to installing or updating software.

Example: Successful or failed package installations.

9. Last Logins

Location: /var/log/lastlog
Purpose: Contains a record of the last login for each user. It's useful for auditing when users last logged into the system.

Example: Last successful login timestamp for each use

10. Audit Logs

Location: /var/log/audit/audit.log
Purpose: Used by the Linux Audit Framework to track detailed events related to security, including access to files, system calls, and user actions. It's critical for compliance with security policies.

Example: Attempts to access restricted files, system configuration changes.

11. Systemd Journals

Location: Accessed via journalctl (stored in binary format under /var/log/journal/)
Purpose: Captures logs from the systemd init system, which manages services and daemons. The logs are structured and searchable, making it easier to diagnose system issues.

Example: Logs about service failures, restarts, and other systemd-managed activities.

**Log Filtering with journalctl

If your system uses systemd, the journalctl command is essential for viewing and filtering logs.

Task: View system logs with journalctl.

journalctl                # View all logs
journalctl -b             # View logs from the current boot
journalctl -u sshd        # View logs for the SSH service
journalctl --since "2 hours ago" # Filter logs from a specific time period

Task: Practice filtering by severity levels (priority).

journalctl -p 3          # Show logs with priority level 3 (errors) or higher
journalctl -p err        # Same as above, using named priorities
